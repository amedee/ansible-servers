---
- name: Create wp-cli cache directory
  ansible.builtin.file:
    path: /var/www/.wp-cli/cache
    state: directory
    owner: "{{ webserver_user }}"
    group: "{{ webserver_user }}"
    mode: u=rwx,g=rwx,o=

- name: Check if wp-config-sample.php exists
  ansible.builtin.stat:
    path: "{{ webserver_directory }}/wp-config-sample.php"
  register: wp_config_sample

- name: Download WordPress
  when: not wp_config_sample.stat.exists
  become: true
  become_user: "{{ webserver_user }}"
  ansible.builtin.command:
    argv:
      - wp
      - core
      - download
      - "--path={{ webserver_directory }}"
  register: wp_core_download
  changed_when: true

- name: Check if wp-config.php exists
  ansible.builtin.stat:
    path: "{{ webserver_directory }}/wp-config.php"
  register: wp_config

- name: Create a new wp-config.php
  when: not wp_config.stat.exists
  become: true
  become_user: "{{ webserver_user }}"
  ansible.builtin.command:
    argv:
      - wp
      - config
      - create
      - "--dbname={{ wp_db_name }}"
      - "--dbuser={{ wp_db_user }}"
      - "--dbpass={{ wp_db_password }}"
      - "--dbhost={{ wp_db_host }}"
      - "--path={{ webserver_directory }}"
  register: wp_core_download
  changed_when: true

- name: Ensure constants in wp-config.php
  ansible.builtin.include_tasks:
    file: wordpress_config.yml
  loop: "{{ wp_constants }}"

- name: Remove WP_REDIS_PASSWORD from wp-config.php
  become: true
  become_user: "{{ webserver_user }}"
  ansible.builtin.lineinfile:
    path: "{{ webserver_directory }}/wp-config.php"
    regexp: "^[ \\t]*define\\(\\s*['\"]WP_REDIS_PASSWORD['\"],.*\\);"
    state: absent

- name: Check if WordPress is connected to Redis
  become: true
  become_user: "{{ webserver_user }}"
  ansible.builtin.command:
    argv:
      - wp
      - redis
      - status
      - "--path={{ webserver_directory }}"
  register: wp_redis_status
  changed_when: false
  failed_when: "'Status: Connected' not in wp_redis_status.stdout"

- name: Install WordPress themes
  ansible.builtin.include_tasks:
    file: wordpress_themes_install.yml
  loop: "{{ wp_themes_install }}"
  loop_control:
    loop_var: wp_theme

- name: Install WordPress plugins
  ansible.builtin.include_tasks:
    file: wordpress_plugins_install.yml
  loop: "{{ wp_plugins_install }}"
  loop_control:
    loop_var: wp_plugin

- name: Uninstall WordPress themes
  ansible.builtin.include_tasks:
    file: wordpress_themes_uninstall.yml
  loop: "{{ wp_themes_uninstall }}"
  loop_control:
    loop_var: wp_theme

- name: Uninstall WordPress plugins
  ansible.builtin.include_tasks:
    file: wordpress_plugins_uninstall.yml
  loop: "{{ wp_plugins_uninstall }}"
  loop_control:
    loop_var: wp_plugin

- name: Create directory /tmp/wp-content
  ansible.builtin.file:
    path: /tmp/wp-content
    state: directory
    mode: a=rwx

- name: Get WordPress uploads from S3
  amazon.aws.s3_object:
    bucket: backups-by-amedee
    object: wp-content/uploads.tar.xz
    dest: /tmp/wp-content/uploads.tar.xz
    mode: get
    overwrite: different
    access_key: "{{ aws_access_key }}"
    secret_key: "{{ aws_secret_key }}"
    region: us-east-1
  register: wp_s3_download

- name: Stat archive file
  ansible.builtin.stat:
    path: /tmp/wp-content/uploads.tar.xz
  register: wp_archive_stat

- name: Fail if archive is missing in normal mode
  ansible.builtin.fail:
    msg: "uploads.tar.xz is missing â€” aborting deployment"
  when: not ansible_check_mode and not wp_archive_stat.stat.exists

- name: Skip unarchive in check mode if archive is missing
  ansible.builtin.debug:
    msg: "Skipping extract: archive file not present in check mode"
  when: ansible_check_mode and not wp_archive_stat.stat.exists

- name: Extract WordPress uploads on the remote machine # noqa no-handler
  ansible.builtin.unarchive:
    remote_src: true
    src: /tmp/wp-content/uploads.tar.xz
    dest: "{{ webserver_directory }}/wp-content/"
    owner: "{{ webserver_user }}"
  when: >
    (not ansible_check_mode and wp_s3_download.changed) or
    (ansible_check_mode and wp_archive_stat.stat.exists)
