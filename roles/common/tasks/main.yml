---
- name: Ensure apt list lock is released
  ansible.builtin.wait_for:
    path: /var/lib/apt/lists/lock
    state: absent
    timeout: 300
  register: apt_lock

- name: Ensure dpkg lock is released
  ansible.builtin.wait_for:
    path: /var/lib/dpkg/lock
    state: absent
    timeout: 300
  register: dpkg_lock

- name: Ensure dpkg frontend lock is released
  ansible.builtin.wait_for:
    path: /var/lib/dpkg/lock-frontend
    state: absent
    timeout: 300
  register: dpkg_frontend_lock

- name: Fail if locks were not released in time
  ansible.builtin.fail:
    msg: "APT locks were not released in time."
  when: apt_lock.failed or dpkg_lock.failed or dpkg_frontend_lock.failed

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 86400  # One day
  register: result
  retries: 3
  delay: 60
  until: result is not failed

- name: Configure locale
  block:
    - name: Ensure locale exists
      community.general.locale_gen:
        name: "{{ common_locale }}"
        state: present

    - name: Install localepurge packages
      ansible.builtin.apt:
        state: present
        pkg: localepurge

    - name: Edit localepurge config file
      ansible.builtin.lineinfile:
        path: /etc/locale.nopurge
        create: true
        line: "{{ common_locale }}"
        owner: root
        mode: u=rw,go=r

- name: Install and upgrade software
  block:
    - name: Remove unneeded APT packages
      ansible.builtin.apt:
        state: absent
        pkg: "{{ common_apt_packages_uninstall }}"
      notify:
        - APT autoclean
        - APT autoremove
        - Check if reboot required

    - name: Install APT packages
      ansible.builtin.apt:
        state: present
        pkg: "{{ common_apt_packages }}"
      notify:
        - APT autoclean
        - APT autoremove
        - Check if reboot required

    - name: Upgrade all packages
      ansible.builtin.apt:
        upgrade: dist
      notify:
        - APT autoclean
        - APT autoremove
        - Check if reboot required

    - name: Install snap packages
      community.general.snap:
        name: "{{ common_snap_packages }}"

- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ hostname }}"

- name: Allow Munin access to port 4949
  community.general.ufw:
    rule: allow
    port: 4949
    src: 142.93.227.16
