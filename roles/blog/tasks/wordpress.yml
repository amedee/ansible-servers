---
- name: Check if wp-config-sample.php exists
  ansible.builtin.stat:
    path: "{{ webserver_directory }}/wp-config-sample.php"
  register: wp_config_sample

- name: Download WordPress
  when: not wp_config_sample.stat.exists
  become: true
  ansible.builtin.command:
    cmd: >
      wp core download
        --path={{ webserver_directory }}
        --allow-root
  register: wp_core_download
  changed_when: true
  notify: Change permissions of webserver directory

- name: Check if wp-config.php exists
  ansible.builtin.stat:
    path: "{{ webserver_directory }}/wp-config.php"
  register: wp_config

- name: Create a new wp-config.php
  when: not wp_config.stat.exists
  become: true
  ansible.builtin.command:
    cmd: >
      wp config create
        --dbname={{ blog_wp_db_name }}
        --dbuser={{ blog_wp_db_user }}
        --dbpass={{ blog_wp_db_password }}
        --dbhost={{ blog_wp_db_host }}
        --path={{ webserver_directory }}
        --allow-root
  register: wp_core_download
  changed_when: true
  notify: Change permissions of webserver directory

- name: Install WordPress themes
  become: true
  ansible.builtin.command:
    cmd: >
      wp theme install
        {{ item }}
        --activate
        --path={{ webserver_directory }}
        --allow-root
  loop: "{{ blog_wp_themes }}"
  register: wp_theme_install
  changed_when: true
  notify: Change permissions of webserver directory

- name: Install WordPress plugins
  become: true
  ansible.builtin.command:
    cmd: >
      wp plugin install
        {{ item }}
        --activate
        --path={{ webserver_directory }}
        --allow-root
  loop: "{{ blog_wp_plugins }}"
  register: wp_plugin_install
  changed_when: true
  notify: Change permissions of webserver directory

- name: Create directory /tmp/wp-content
  ansible.builtin.file:
    path: /tmp/wp-content
    state: directory
    mode: u=rwx,go=rx

- name: Get WordPress uploads from S3
  amazon.aws.s3_object:
    bucket: backups-by-amedee
    object: wp-content/uploads.tar.xz
    dest: /tmp/wp-content/uploads.tar.xz
    mode: get
    overwrite: different
    access_key: "{{ common_aws_access_key }}"
    secret_key: "{{ common_aws_secret_key }}"
    region: us-east-1

- name: Extract WordPress uploads on the remote machine
  become: true
  ansible.builtin.unarchive:
    remote_src: true
    src: /tmp/wp-content/uploads.tar.xz
    dest: "{{ webserver_directory }}/wp-content/"
    owner: www-data
  notify: Change permissions of webserver directory
