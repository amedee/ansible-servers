---
- name: Ensure keyrings directory exists
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    owner: root
    mode: u=rwx,go=rx

- name: Import Ondřej Surý GPG keys using isolated GNUPGHOME
  ansible.builtin.shell: |
    set -euo pipefail
    export GNUPGHOME="$(mktemp -d)"
    trap 'rm -rf "$GNUPGHOME"' EXIT

    gpg --keyserver keyserver.ubuntu.com \
        --recv-keys 71DAEAAB4AD4CAB6 4F4EA0AAE5267A6C

    gpg --export 71DAEAAB4AD4CAB6 4F4EA0AAE5267A6C \
        > {{ webserver_ondrej_signature }}
  args:
    creates: "{{ webserver_ondrej_signature }}"
    executable: /bin/bash
  register: ondrej_gpg_import
  failed_when: ondrej_gpg_import.rc != 0

- name: Configure deb822-format APT repositories
  ansible.builtin.deb822_repository:
    name: "{{ item.name }}"
    types: "{{ item.repo.types | default(omit) }}"
    uris: "{{ item.repo.uris }}"
    suites: "{{ item.repo.suites }}"
    components: "{{ item.repo.components }}"
    signed_by: "{{ item.repo.signed_by }}"
    state: present
  loop: "{{ webserver_deb822_repositories }}"

- name: Install APT preference to block RC versions of PHP
  ansible.builtin.copy:
    src: etc/apt/preferences.d/pin_php.pref
    dest: /etc/apt/preferences.d/pin_php.pref
    owner: root
    mode: u=rw,go=r
  register: apt_pin_result

- name: Update APT cache if pinning file changed  # noqa no-handler
  ansible.builtin.apt:
    update_cache: true
  when: apt_pin_result.changed

- name: Install APT packages
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 86400 # One day
    pkg: "{{ webserver_apt_packages }}"

- name: Copy website config files
  ansible.builtin.copy:
    src: etc/nginx/
    dest: /etc/nginx/
    owner: root
    mode: u=rw,go=r
    directory_mode: u=rwx,go=rx
  notify: Restart nginx

- name: Delete DigitalOcean website config
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/digitalocean
    state: absent
  notify: Restart nginx

- name: Create a symbolic link
  ansible.builtin.file:
    src: /etc/nginx/sites-available/amedee.be
    dest: /etc/nginx/sites-enabled/default
    owner: root
    state: link
  notify: Restart nginx

- name: "Check existence of webserver directory {{ webserver_directory }}"
  ansible.builtin.file:
    path: "{{ webserver_directory }}"
    state: directory
    owner: "{{ webserver_user }}"
    group: "{{ webserver_user }}"
    mode: u=rwx,go=rx

- name: Install and configure Letsencrypt
  ansible.builtin.import_tasks: letsencrypt.yml

- name: Configure Redis
  ansible.builtin.lineinfile:
    path: /etc/redis/redis.conf
    create: true
    owner: root
    mode: u=rw,go=r
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop: "{{ webserver_redis_settings }}"
  notify: Restart redis
