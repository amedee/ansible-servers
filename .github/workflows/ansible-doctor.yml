---
name: ðŸ“š Ansible Role Docs

on: # yamllint disable-line rule:truthy
  workflow_call:
    secrets:
      OPENROUTER_API_KEY:
        required: true
  workflow_dispatch:

concurrency:
  group: ansible-doctor-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  id-token: write

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install ansible-doctor
        run: pip install ansible-core ansible-doctor

      - name: Run ansible-doctor
        run: ansible-doctor --force --recursive roles

      - name: Format Markdown with Prettier
        run: |
          npx prettier --write "roles/**/README.md"

      - name: Configure Git
        run: |
          git config --global user.name "Ansible Doc Bot ðŸ“š"
          git config --global user.email "amedee-docbot@amedee.be"

      - name: Check for changed .md files
        id: changes
        run: |
          git add roles/**/*.md
          if git diff --cached --quiet; then
            echo "no_changes=true" >> "$GITHUB_OUTPUT"
          else
            echo "no_changes=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate AI commit message
        id: ai_commit
        uses: ./.github/actions/ai-commit-message
        if: steps.changes.outputs.no_changes == 'false'
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        with:
          diff_path: 'roles/*/README.md'
          prompt_content: |
            Write a concise Git commit message (max 72 characters)
            describing the staged Markdown documentation changes to Ansible roles.
            The commit message must start with a relevant emoji.

      - name: Show message
        if: steps.changes.outputs.no_changes == 'false'
        run: |
          echo "Message from AI: ${{ steps.ai_commit.outputs.message }}"

      - name: Commit and push changes
        if: steps.changes.outputs.no_changes == 'false'
        run: |
          git commit -m "${{ steps.ai_commit.outputs.message }}"
          git push
