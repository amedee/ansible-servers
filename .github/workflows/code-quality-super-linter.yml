---
name: üõ†Ô∏è Code Quality ‚Äî Super-Linter

on: # yamllint disable-line rule:truthy
  pull_request:
    types:
      - opened
      - ready_for_review
      - reopened
      - synchronize
  workflow_call:
  workflow_dispatch:

concurrency:
  group: ${{ format(
    'code-quality-super-linter-{0}-{1}',
    github.workflow,
    github.event_name == 'pull_request' && github.head_ref || github.ref) }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint:
    name: Super-linter
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      statuses: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0
          persist-credentials: false

      - name: Restore Ansible cache
        uses: ./.github/actions/restore-ansible-cache

      - name: Run Super-linter
        id: super-linter
        # yamllint disable-line rule:line-length
        uses: super-linter/super-linter/slim@7bba2eeb89d01dc9bfd93c497477a57e72c83240 # v8.2.0
        env:
          CREATE_LOG_FILE: true
          FAIL_ON_CONFLICTING_TOOLS_ENABLED: true
          FIX_BIOME_FORMAT: true
          FIX_BIOME_LINT: true
          FIX_GITHUB_ACTIONS_ZIZMOR: true
          FIX_JSON_PRETTIER: true
          FIX_PYTHON_RUFF_FORMAT: true
          FIX_SHELL_SHFMT: true
          FIX_YAML_PRETTIER: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IGNORE_GITIGNORED_FILES: true
          LINTER_RULES_PATH: "."
          VALIDATE_ANSIBLE: false
          VALIDATE_CSS_STYLELINT: false
          VALIDATE_GIT_COMMITLINT: false
          VALIDATE_JAVASCRIPT_ES: false
          VALIDATE_JAVASCRIPT_PRETTIER: false
          VALIDATE_JSON: false
          VALIDATE_NATURAL_LANGUAGE: false
          VALIDATE_PYTHON: false
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_PYLINT: false
        continue-on-error: true

      - name: Check if there are changes
        id: changes
        run: |
          {
            # Determine base commit dynamically
            if [ "${{ github.event_name }}" = "pull_request" ]; then
              BASE=HEAD^2
            else
              BASE=HEAD^1
            fi
            echo "base_commit=$BASE"

            # Check if there is a diff
            if git diff --quiet "$BASE"; then
              echo "has_changes=false"
            else
              echo "has_changes=true"
            fi
          } >> "$GITHUB_OUTPUT"

      - name: üì§ Extract staged git diff
        if: steps.changes.outputs.has_changes == 'true'
        uses: GrantBirki/git-diff-action@7420e4d095c27bb23359787640976d60c94fd216 # v2.8.1
        id: get_diff
        with:
          base_branch: ${{ steps.changes.outputs.base_commit }}
          file_output_only: "true"
          raw_diff_file_output: diff.txt
          search_path: "."

      - name: üß† Prepare diff outputs
        if: steps.changes.outputs.has_changes == 'true'
        id: diff_outputs
        run: |
          {
            if [ -s diff.txt ]; then
              echo "has_diff=true"
              # Trim for safety: replace newlines with \n and escape % for safe output
              echo "diff_content<<EOF"
              cat diff.txt
              echo "EOF"
            else
              echo "has_diff=false"
              echo "diff_content="
            fi
          } >> "$GITHUB_OUTPUT"

      - name: Attach diff to summary
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          {
            echo "### Diff"
            echo ""
            if [ -f diff.txt ]; then
              echo '```diff'
              cat diff.txt
              echo '```'
            fi
          } >> "$GITHUB_STEP_SUMMARY"

      - name: ü§ñ Generate AI commit message
        if: steps.changes.outputs.has_changes == 'true'
        id: ai_commit
        uses: ./.github/actions/ai-commit-message
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        with:
          diff_content: ${{ steps.diff_outputs.outputs.diff_content }}
          prompt_content: |
            Write a concise Git commit message describing the staged changes.

      - name: üîÅ Commit, push, and PR
        if: steps.changes.outputs.has_changes == 'true'
        uses: ./.github/actions/create-or-update-pr
        with:
          branch: chore/super-linter
          commit_message: ${{ steps.ai_commit.outputs.message }}
          pr_title: "‚¨ÜÔ∏è Super-Linter"
          pr_body: ${{ steps.ai_commit.outputs.message }}
          github_token: ${{ secrets.ANSIBLE_DEP_UPDATER_TOKEN }}
          git_user_name: "github-actions[bot]"
          git_user_email: "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Fail workflow if super-linter failed
        env:
          STEPS_SUPER_LINTER_OUTCOME: ${{ steps.super-linter.outcome }}
        run: |
          if [ "${STEPS_SUPER_LINTER_OUTCOME}" != "success" ]; then
            echo "Super-Linter failed, failing workflow."
            exit 1
          fi
