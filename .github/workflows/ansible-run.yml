---
name: üöÄ Ansible Run

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      check-mode:
        description: "Run in dry-run mode (ansible --check)"
        required: false
        default: false
        type: boolean
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      VAULT_PASSWORD:
        required: true
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  ansible-playbook:
    name: Ansible Playbook
    runs-on: ubuntu-latest
    strategy:
      matrix:
        host:
          - amedee.be
          - box.vangasse.eu

    concurrency:
      group: ${{ format(
        'ansible-run-{0}-{1}-{2}',
        (inputs.check-mode && 'check-' || ''),
        matrix.host,
        github.ref) }}
      cancel-in-progress: true

    env:
      ANSIBLE_CONFIG: ansible.cfg
      ANSIBLE_STDOUT_CALLBACK: yaml
      CHECK_MODE_INPUT: ${{ inputs.check-mode }}
      GITHUB_EVENT: ${{ github.event_name }}
      GITHUB_REF: ${{ github.ref }}

    steps:
      - name: Collect Workflow Telemetry
        # yamllint disable-line rule:line-length
        uses: catchpoint/workflow-telemetry-action@94c3c3d9567a0205de6da68a76c428ce4e769af1 # v2.0.0

      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: üîê Verify secrets are available
        uses: ./.github/actions/verify-secrets
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VAULT_PASSWORD: ${{ secrets.VAULT_PASSWORD }}
        with:
          secrets: SSH_PRIVATE_KEY,VAULT_PASSWORD # pragma: allowlist secret

      - name: Restore Ansible cache
        uses: ./.github/actions/restore-ansible-cache

      - name: Create controlmasters directory
        run: mkdir --parents ~/.ssh/controlmasters

      - name: Determine Ansible check mode
        id: set_check_mode
        run: |
          case "$GITHUB_EVENT" in
            workflow_call)
              if [[ "$CHECK_MODE_INPUT" == "true" ]]; then
                check="--check"
              else
                check=""
              fi
              ;;
            workflow_dispatch)
              check=""
              ;;
            *)
              check="--check"
              ;;
          esac

          echo "check_mode=$check" >> "$GITHUB_OUTPUT"
          echo "üõ†Ô∏è Ansible check mode set to: '$check'"

      - name: Deploy changes to servers
        # yamllint disable-line rule:line-length
        uses: dawidd6/action-ansible-playbook@93764e7048f4dd16117d134dadb4b36e8ee73227 # v4
        with:
          playbook: playbooks/site.yml
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          vault_password: ${{ secrets.VAULT_PASSWORD }}
          options: |
            --inventory inventory/production
            --limit ${{ matrix.host }}
            ${{ steps.set_check_mode.outputs.check_mode }}
            -vv

      - name: Archive Ansible log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format(
            'ansible-{0}{1}.log',
            steps.set_check_mode.outputs.check_mode,
            matrix.host) }}
          path: ~/.ansible/ansible.log
          compression-level: 9
          overwrite: true

      - name: checkrun-timechart
        # yamllint disable-line rule:line-length
        uses: urcomputeringpal/checkrun-timechart-action@9de4251d7983342ccf09b84ed921326887571853 # v0.0.8
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          SUMMARY: "true"
