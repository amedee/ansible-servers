---
name: 📽️ Gource

on: # yamllint disable-line rule:truthy
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
  workflow_dispatch:
    inputs:
      skip_interval_hours:
        description: "Skip interval in hours (default 24 hours)"
        required: false
        default: 24

concurrency:
  group: gource-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  verify-secrets:
    name: 🔐 Verify AWS Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout minimal repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          persist-credentials: false
          sparse-checkout: |
            .github/actions/verify-secrets

      - name: 🔐 Verify secrets are available
        uses: ./.github/actions/verify-secrets
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          secrets: AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY # pragma: allowlist secret

  generate-gource:
    name: Generate Gource video and thumbnail
    needs:
      - verify-secrets
    runs-on: ubuntu-latest
    outputs:
      run_upload: ${{ steps.gource-check.outputs.run_job }}
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Check if Gource video should be generated
        id: gource-check
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          HOURS: ${{ github.event.inputs.skip_interval_hours }}
        with:
          script: |
            const workflowPath = '.github/workflows/gource.yml';
            const skipIntervalHours = parseInt(process.env.HOURS) || 24;
            const skipIntervalSeconds = skipIntervalHours * 60 * 60;

            const runs = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: workflowPath,
              branch: 'main',
              per_page: 10
            });

            const successfulRun = runs.data.workflow_runs.find(run =>
              run.status === 'completed' && run.conclusion === 'success'
            );

            const now = new Date();
            let runJob = false;

            const { data: lastCommit } = await github.rest.repos.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha
            });

            const fileChanged = lastCommit.files.some(f => f.filename === workflowPath);

            if (fileChanged || !successfulRun || ((now - new Date(successfulRun.created_at)) / 1000 > skipIntervalSeconds)) {
              runJob = true;
            }

            core.setOutput('run_job', runJob.toString());

      - name: Make a video of the repository history
        if: ${{ steps.gource-check.outputs.run_job == 'true' }}
        uses: nbprojekt/gource-action@57256d303c5a9a5e72ed92ba13e3e83c5ec8b257 # v1.3.0
        with:
          avatars_auto_fetch: true
          gource_title: ${{ github.repository }}

      - name: Install ffmpeg
        if: ${{ steps.gource-check.outputs.run_job == 'true' }}
        uses: AnimMouse/setup-ffmpeg@eff53a3f3f78e637c2c8399847b61993d6e277ce # v1.2.2

      - name: Generate thumbnail
        if: ${{ steps.gource-check.outputs.run_job == 'true' }}
        run: |
          echo "Generating thumbnail..."
          ffmpeg -y -i "./gource/gource.mp4" \
            -filter_complex "[0:v]select='not(mod(n,60))',setpts=0.1*PTS,fps=10,scale=320:-1:flags=lanczos" \
            -vsync vfr "./gource/gource.gif"

      - name: Upload Gource artifacts
        if: ${{ steps.gource-check.outputs.run_job == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: gource-assets
          path: ./gource/
          retention-days: 7

  upload-artifacts:
    name: Upload artifacts to S3
    if: needs.generate-gource.outputs.run_upload == 'true'
    needs:
      - verify-secrets
      - generate-gource
    runs-on: ubuntu-latest
    strategy:
      matrix:
        artifact:
          - { name: video, ext: mp4, mime: video/mp4 }
          - { name: thumbnail, ext: gif, mime: image/gif }

    steps:
      - name: Download gource artifacts
        uses: actions/download-artifact@v5
        with:
          name: gource-assets
          path: ./gource

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload artifact to S3
        env:
          BUCKET: gource-by-amedee
        run: |
          ARTIFACT_NAME="${{ matrix.artifact.name }}"
          EXT="${{ matrix.artifact.ext }}"
          MIME="${{ matrix.artifact.mime }}"

          echo "Uploading $ARTIFACT_NAME..."

          FILE="./gource/gource.$EXT"
          FILE_KEY="gource-${{ github.sha }}.$EXT"
          LATEST_KEY="gource-latest.$EXT"

          aws s3 cp "$FILE" "s3://$BUCKET/$FILE_KEY" --content-type "$MIME"
          aws s3api copy-object \
            --bucket "$BUCKET" \
            --copy-source "$BUCKET/$FILE_KEY" \
            --key "$LATEST_KEY" \
            --content-type "$MIME"

  generate-summary:
    name: Gource video upload
    needs:
      - verify-secrets
      - generate-gource
      - upload-artifacts
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: needs.generate-gource.outputs.run_upload == 'true'

    steps:
      - name: Checkout commit (shallow)
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          persist-credentials: false

      - name: Download gource artifacts
        uses: actions/download-artifact@v5
        with:
          name: gource-assets
          path: ./gource

      - name: Generate Summary
        env:
          BUCKET: gource-by-amedee
          AWS_REGION: us-east-1
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VIDEO_URL="https://$BUCKET.s3.$AWS_REGION.amazonaws.com/gource-${{ github.sha }}.mp4"
          THUMB_URL="https://$BUCKET.s3.$AWS_REGION.amazonaws.com/gource-${{ github.sha }}.gif"
          FILE_SIZE=$(stat --format="%s" "./gource/gource.mp4")
          COMMIT_MSG=$(git log -1 --pretty=%s)
          COMMIT_DATE=$(git log -1 --format=%cd --date=short)

          SUMMARY="### 📽️ Gource video upload summary

          ![Preview]($THUMB_URL)

          - **Public URL:** [Click to view video]($VIDEO_URL)
          - **File size:** $FILE_SIZE
          - **Commit:** \`${{ github.sha }}\` – $COMMIT_MSG
          - **Commit date:** $COMMIT_DATE
          "

          echo "$SUMMARY" >> "$GITHUB_STEP_SUMMARY"

          gh api repos/${{ github.repository }}/commits/${{ github.sha }}/comments \
            --raw-field body="$SUMMARY"
