---
name: Gource
on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  gource:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if Gource video should be generated
        id: gource-check
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const path = '.github/workflows/gource.yml';
            const workflowFile = path;

            const runs = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: workflowFile,
              branch: 'main',
              per_page: 10
            });

            const successfulRun = runs.data.workflow_runs.find(run =>
              run.status === 'completed' && run.conclusion === 'success'
            );

            const now = new Date();
            let runJob = false;

            // Check if the workflow file was changed in the last commit
            const { data: lastCommit } = await github.rest.repos.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha
            });

            const fileChanged = lastCommit.files.some(f => f.filename === path);

            if (fileChanged) {
              core.info(`${path} was changed, will generate video.`);
              runJob = true;
            } else if (!successfulRun) {
              core.info('No successful run found, will generate video.');
              runJob = true;
            } else {
              const lastTime = new Date(successfulRun.created_at);
              const diff = (now - lastTime) / 1000;
              core.info(`Last successful run was ${Math.round(diff)} seconds ago.`);
              if (diff > 60 * 60 * 24) {
                core.info('More than 1 day ago, will generate video.');
                runJob = true;
              } else {
                core.info('Less than 1 day ago, will skip generation.');
              }
            }

            core.setOutput('run_job', runJob.toString());

      - name: Make a video of the repository history
        if: ${{ steps.gource-check.outputs.run_job == 'true' }}
        uses: nbprojekt/gource-action@57256d303c5a9a5e72ed92ba13e3e83c5ec8b257 # v1.3.0
        with:
          avatars_auto_fetch: true
          gource_title: ${{ github.repository }}

      - name: Install ffmpeg
        if: ${{ steps.gource-check.outputs.run_job == 'true' }}
        uses: AnimMouse/setup-ffmpeg@27e66fd2fe1d643b73a7c5cb105f3b4116bfb8db # v1.2.1

      - name: Prepare and upload gource video and thumbnail to S3
        id: gource-upload
        if: ${{ steps.gource-check.outputs.run_job == 'true' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          set -e

          COMMIT_HASH=$(git rev-parse --short HEAD)
          ORIG_VIDEO=./gource/gource.mp4
          VIDEO=./gource/gource-$COMMIT_HASH.mp4
          THUMB=./gource/gource-$COMMIT_HASH.gif

          mv "$ORIG_VIDEO" "$VIDEO"

          echo "Generating thumbnail..."
          ffmpeg -y -i "$VIDEO" \
            -filter_complex "[0:v]select='not(mod(n,60))',setpts=0.1*PTS,fps=10,scale=320:-1:flags=lanczos" \
            -vsync vfr "$THUMB"

          BUCKET=gource-by-amedee
          REGION=us-east-1
          KEY_BASE=gource-$COMMIT_HASH
          VIDEO_KEY=$KEY_BASE.mp4
          THUMB_KEY=$KEY_BASE.gif

          echo "Uploading video..."
          aws s3 cp "$VIDEO" "s3://$BUCKET/$VIDEO_KEY" \
            --content-type video/mp4
          aws s3api copy-object \
            --bucket "$BUCKET" \
            --copy-source "$BUCKET/$VIDEO_KEY" \
            --key gource-latest.mp4 \
            --content-type video/mp4

          echo "Uploading thumbnail..."
          aws s3 cp "$THUMB" "s3://$BUCKET/$THUMB_KEY" \
            --content-type image/gif
          aws s3api copy-object \
            --bucket "$BUCKET" \
            --copy-source "$BUCKET/$THUMB_KEY" \
            --key gource-latest.gif \
            --content-type image/gif

          VIDEO_URL="https://$BUCKET.s3.$REGION.amazonaws.com/$VIDEO_KEY"
          THUMB_URL="https://$BUCKET.s3.$REGION.amazonaws.com/$THUMB_KEY"

          FILE_SIZE=$(du -h "$VIDEO" | cut -f1)
          COMMIT_MSG=$(git log -1 --pretty=%s)

          {
            echo "### 📽️ Gource Video Upload Summary"
            echo ""
            echo "![Preview]($THUMB_URL)"
            echo ""
            echo "- **Public URL:** [Click to view video]($VIDEO_URL)"
            echo "- **File size:** $FILE_SIZE"
            echo "- **Commit:** \`$COMMIT_HASH\` – $COMMIT_MSG"
          } >> "$GITHUB_STEP_SUMMARY"
