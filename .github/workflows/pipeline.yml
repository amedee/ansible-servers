---
name: üß™üßºüöÄ Wash, Test, Deploy

on: # yamllint disable-line rule:truthy
  push:
    branches:
      - main
    paths:
      - "**"
      - "!*.md"
      - "!.pre-commit-config.yaml"
      - "!Vagrantfile"
      - "!deploy_to_staging.sh"
      - "!resize_disk.sh"
  schedule:
    - cron: "10 3 * * SAT"
  workflow_dispatch:

concurrency:
  group: pipeline-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  codacy:
    name: üõ†Ô∏è Code Quality ‚Äî Codacy Scan
    uses: ./.github/workflows/code-quality-codacy.yml
    permissions:
      actions: read
      contents: read
      security-events: write

  super-linter:
    name: üõ†Ô∏è Code Quality ‚Äî Super-Linter
    uses: ./.github/workflows/code-quality-super-linter.yml
    permissions:
      contents: write
      packages: read
      statuses: write

  validate-configs:
    name: üõ†Ô∏è Code Quality ‚Äî Validate Configs
    uses: ./.github/workflows/code-quality-validate-configs.yml
    permissions:
      contents: read

  check-changes:
    runs-on: ubuntu-latest
    outputs:
      has_non_md_changes: ${{ steps.check.outputs.has_non_md }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: check
        run: |
          BEFORE=${{ github.event.before }}
          AFTER=${{ github.sha }}

          echo "Commit before push: ${BEFORE}"
          echo "Commit after push: ${AFTER}"

          # Fallback if 'before' does not exist
          if ! git cat-file -e "${BEFORE}^{commit}"; then
            echo "::warning::Commit $BEFORE not found, falling back to parent of $AFTER"
            BEFORE=$(git rev-parse "${AFTER}^")
          fi

          echo "Diffing from $BEFORE to $AFTER"
          CHANGED=$(git diff --name-only "$BEFORE" "$AFTER")
          echo "Changed files:"
          echo "$CHANGED"

          if echo "$CHANGED" | grep -vE '\.md$' > /dev/null; then
            echo "has_non_md=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_non_md=false" >> "$GITHUB_OUTPUT"
          fi

  dry-run:
    name: üîç Dry Run on Production
    uses: ./.github/workflows/dry-run-production.yml
    needs: check-changes
    if: needs.check-changes.outputs.has_non_md_changes == 'true'
    strategy:
      matrix:
        host:
          - amedee.be
          - box.vangasse.eu
    with:
      host: ${{ matrix.host }}
    secrets:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      VAULT_PASSWORD: ${{ secrets.VAULT_PASSWORD }}
    permissions:
      contents: read
      pull-requests: write

  deploy:
    name: üöÄ Deploy to Production
    uses: ./.github/workflows/deploy-production.yml
    if: needs.check-changes.outputs.has_non_md_changes == 'true'
    needs:
      - check-changes
      - codacy
      - dry-run
      - super-linter
      - validate-configs
    strategy:
      matrix:
        host:
          - amedee.be
          - box.vangasse.eu
    with:
      host: ${{ matrix.host }}
    secrets:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      VAULT_PASSWORD: ${{ secrets.VAULT_PASSWORD }}
    permissions:
      contents: read
      pull-requests: write

  ansible-doctor:
    name: üìö Ansible Role Docs
    uses: ./.github/workflows/ansible-doctor.yml
    needs: deploy
    secrets:
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
    permissions:
      contents: write
      id-token: write

  gource:
    name: üìΩÔ∏è Gource
    uses: ./.github/workflows/gource.yml
    needs: deploy
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    permissions:
      contents: write
      id-token: write

  workflow-metrics:
    name: üìä Workflow Metrics
    uses: ./.github/workflows/workflow-metrics.yml
    needs: deploy
    permissions:
      actions: read
      issues: write

  cleanup-closed-issues:
    name: üßπ Cleanup Closed Issues
    uses: ./.github/workflows/cleanup-closed-issues.yml
    needs: workflow-metrics
    with:
      dry_run: false
      days_to_keep: "30"
      min_issues_to_keep: "6"
    secrets:
      GH_FINEGRAINED_PAT: ${{ secrets.GH_FINEGRAINED_PAT }}
    permissions:
      issues: write

  cleanup-gource:
    name: üßπ Cleanup orphaned Gource files
    uses: ./.github/workflows/cleanup-gource.yml
    needs: gource
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    permissions:
      contents: read

  cleanup-workflow-runs:
    name: üßπ Cleanup old workflow runs
    uses: ./.github/workflows/cleanup-workflow-runs.yml
    needs:
      - ansible-doctor
      - cleanup-closed-issues
      - cleanup-gource
    permissions:
      actions: write
      contents: read
