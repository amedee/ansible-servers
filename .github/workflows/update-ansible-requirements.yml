---
name: ‚¨ÜÔ∏è Update Ansible Requirements

on: # yamllint disable-line rule:truthy
  schedule:
    - cron: '0 5 * * 1'  # Every Monday at 05:00 UTC
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  update-ansible-deps:
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: üêç Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.13'

      - name: üì¶ Install Dependencies
        run: |
          pip install ruamel.yaml requests packaging

      - name: üîÑ Update requirements.yml
        run: python .github/scripts/update_ansible_requirements.py

      - name: Check if requirements.yml changed (staged)
        id: changes
        run: |
          git add requirements.yml
          git diff --cached --word-diff
          if git diff --cached --quiet; then
            echo "no_changes=true"
            echo "no_changes=true" >> "$GITHUB_OUTPUT"
          else
            echo "no_changes=false"
            echo "no_changes=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate AI commit message via OpenRouter.ai
        id: ai_commit
        if: steps.changes.outputs.no_changes == 'false'
        run: |
          echo "Requesting commit message from OpenRouter..."

          diff=$(git diff --cached --unified=0 -- 'requirements.yml' | head -c 3000)

          prompt=$(jq -n --arg diff "$diff" '[
            {
              "role": "user",
              "content": (
                "Write a concise Git commit message describing the staged updates "
                + "to Ansible roles and collections in requirements.yml.\n"
                + "The commit message must start with a relevant emoji on the first line, "
                + "which is max 72 characters.\n"
                + "Leave a blank line after the first line.\n"
                + "Then add the rest of the commit message explaining the changes.\n"
                + "Here is the diff:\n\n"
                + $diff
              )
            }
          ]')

          data=$(jq -n --argjson messages "$prompt" '{
            model: "mistralai/devstral-small:free",
            messages: $messages,
            temperature: 0.7
          }')

          response=$(curl -s https://openrouter.ai/api/v1/chat/completions \
            -H "Authorization: Bearer ${{ secrets.OPENROUTER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -H "HTTP-Referer: https://github.com/${{ github.repository }}" \
            -H "X-Title: Ansible Requirements Update" \
            -d "$data"
          )

          echo "Raw response:"
          echo "$response"

          message=$(echo "$response" | jq -r '.choices[0].message.content // empty')

          if [ -z "$message" ]; then
            echo "‚ùå Failed to get a commit message. Using fallback."
            message="‚¨ÜÔ∏è Update Ansible requirements.yml dependencies\n\nUpdated roles and collections to latest versions."
          fi

          # Remove backticks only, preserve newlines for commit message formatting
          message="${message//\`/}"

          # Split first line and rest, truncate first line to 72 chars max
          first_line=$(echo "$message" | head -n1 | cut -c1-72)
          rest=$(echo "$message" | tail -n +2)

          # Reassemble message with blank line between
          full_message="$first_line"$'\n\n'"$rest"

          {
            echo "message<<EOF"
            echo "$full_message"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: üß™ Commit & Push updated requirements.yml
        id: commit_push
        env:
          ANSIBLE_DEP_UPDATER_TOKEN: ${{ secrets.ANSIBLE_DEP_UPDATER_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b ansible-requirements-update
          git add requirements.yml
          if [ "${{ steps.changes.outputs.no_changes }}" = "false" ]; then
            git commit -m "${{ steps.ai_commit.outputs.message }}"
            REPO_URL="https://x-access-token:${ANSIBLE_DEP_UPDATER_TOKEN}@github.com/${{ github.repository }}.git"
            git push --force "$REPO_URL" ansible-requirements-update
            git fetch origin ansible-requirements-update:refs/remotes/origin/ansible-requirements-update
            echo "pushed=true" >> "$GITHUB_OUTPUT"
          else
            echo "No changes to commit."
            echo "pushed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: üîÅ Create PR
        if: steps.commit_push.outputs.pushed == 'true'
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          base: ${{ github.event.repository.default_branch }}
          branch: ansible-requirements-update
          title: '‚¨ÜÔ∏è Update Ansible requirements'
          body: 'This PR updates the versions in `requirements.yml` to their latest available versions.'
          delete-branch: true
