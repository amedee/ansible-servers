---
name: Create or Update PR
description: Commit changes, push to a branch, and create or update a pull request.

inputs:
  branch:
    description: "Branch to push changes to"
    required: true
  commit_message:
    description: "Full commit message"
    required: true
  pr_title:
    description: "Title for the pull request"
    required: true
  pr_body:
    description: "Body for the pull request"
    required: true
  github_token:
    description: "GitHub token with write access"
    required: true
  git_user_name:
    description: "Git user.name to use for commits"
    required: true
  git_user_email:
    description: "Git user.email to use for commits"
    required: true

outputs:
  pushed:
    description: "Whether changes were pushed"
    value: ${{ steps.commit_push.outputs.pushed }}

runs:
  using: composite
  steps:
    - shell: bash
      id: commit_push
      env:
        GH_TOKEN: ${{ inputs.github_token }}
      run: |
        set -e

        git config user.name "${{ inputs.git_user_name }}"
        git config user.email "${{ inputs.git_user_email }}"
        git checkout -B "${{ inputs.branch }}"

        if git diff --cached --quiet; then
          echo "üü° No staged changes to commit."
          echo "pushed=false" >> "$GITHUB_OUTPUT"
        else
          echo "‚úÖ Committing changes..."
          git commit -m "${{ inputs.commit_message }}"
          REPO_URL="https://x-access-token:${{ inputs.github_token }}@github.com/${GITHUB_REPOSITORY}.git"
          git push --force "$REPO_URL" "${{ inputs.branch }}"
          echo "pushed=true" >> "$GITHUB_OUTPUT"
        fi

    - shell: bash
      env:
        GH_TOKEN: ${{ inputs.github_token }}
      run: |
        set -e

        REPO="${GITHUB_REPOSITORY}"
        BRANCH="${{ inputs.branch }}"

        echo "üîç Checking if PR exists from branch '$BRANCH'..."
        PR_JSON=$(gh pr list \
          --repo "$REPO" \
          --head "$BRANCH" \
          --json number \
          --jq '.[0]')

        if [[ -n "$PR_JSON" ]]; then
          PR_NUMBER=$(echo "$PR_JSON" | jq -r .number)
          echo "üîÑ PR #$PR_NUMBER exists, updating..."
          gh pr edit "$PR_NUMBER" \
            --repo "$REPO" \
            --title "${{ inputs.pr_title }}" \
            --body "${{ inputs.pr_body }}"
        else
          echo "üÜï No PR found, creating a new one..."
          gh pr create \
            --repo "$REPO" \
            --base main \
            --head "$BRANCH" \
            --title "${{ inputs.pr_title }}" \
            --body "${{ inputs.pr_body }}"
        fi
